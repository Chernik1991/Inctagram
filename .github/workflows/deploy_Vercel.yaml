name: GitHub Actions Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - staging
jobs:
  Tests:
    name: Tests # название конктретной работы в pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout  # клонируем репозиторый
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.14.0
          run_install: false
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install # устанавливаем зависимости

      - name: Test
        run: pnpm run test # запускаем скрипт тестами
  Playwright-Tests:
    name: playwright-tests # название конктретной работы в pipeline
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout  # клонируем репозиторый
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.14.0
          run_install: false
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install # устанавливаем зависимости
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  Deploy-Preview:
    runs-on: ubuntu-latest
    needs: [ Tests,Playwright-Tests ]
    steps:
      - name: pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.14.0
          run_install: false
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}